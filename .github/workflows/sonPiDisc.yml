# This is a basic workflow to help you get started with Actions
name: Basic push

on:
  push:
    branches: [ master, EmileDerain-patch-1-GitHub-Action ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout project
        uses: actions/checkout@v2

      - name: Set up JDK 1.17
        uses: actions/setup-java@v1
        with:
          java-version: 1.17

      - name: Maven build
        run: mvn clean package

  mutation:
    if: ${{ needs.build.result == 'success' }}
    needs: [ Build ]
    name: Mutation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout project
        uses: actions/checkout@v2
      - name: Set up JDK 1.17
        uses: actions/setup-java@v1
        with:
          java-version: 1.17
      - name: Run Mutation Testing
        run: mvn verify -Ppitest
      - name: Download a single artifact
        uses: actions/upload-artifact@v3
        with:
          name: my-artifact
          path: ./
#      - name: Send file my-artifact.html to discord channel
#        uses: sinshutu/upload-to-discord@master
#        env:
#          DISCORD_WEBHOOK: "https://discord.com/api/webhooks/958486282735071312/hEz4ZkcN6b6f-uKruZJAS2Y3m8foboLoBxLI5DSVA_ViWiVtZvTpCn6Uo50SwBpl-mIe"
#        with:
#          args: my-artifact.html

  discord:
    needs: [ Build, Mutation ]
    name: Discord message
    runs-on: ubuntu-latest

    steps:
      - name: Discord Commits Message success
        if: ${{ needs.build.result == 'success' && needs.mutation.result  == 'success' }}
        uses: Sniddl/discord-commits@v1.3
        with:
          webhook: "https://discord.com/api/webhooks/958486282735071312/hEz4ZkcN6b6f-uKruZJAS2Y3m8foboLoBxLI5DSVA_ViWiVtZvTpCn6Uo50SwBpl-mIe"
          message: "Successful build and mutation"  #: {{ github.event.head_commit.message }}
#          embed: '{ "title": "{{ commit.title }}", "description": "{{ commit.description }}", "url": "{{ commit.url }}", "author": { "name": "{{ commit.author.name }} ({{ commit.author.username }})", "icon_url": "https://avatars.io/gravatar/{{ commit.author.email }}"} }'
      - name: Discord Commits Message mutation fail
        if: ${{ needs.build.result == 'success' && needs.mutation.result == 'failure' }}
        uses: Sniddl/discord-commits@v1.3
        with:
          webhook: "https://discord.com/api/webhooks/958486282735071312/hEz4ZkcN6b6f-uKruZJAS2Y3m8foboLoBxLI5DSVA_ViWiVtZvTpCn6Uo50SwBpl-mIe"
          message: "Successful build but mutation failed"  #: {{ github.event.head_commit.message }}
          #          embed: '{ "title": "{{ commit.title }}", "description": "{{ commit.description }}", "url": "{{ commit.url }}", "author": { "name": "{{ commit.author.name }} ({{ commit.author.username }})", "icon_url": "https://avatars.io/gravatar/{{ commit.author.email }}"} }'
      - name: Discord Commits Message build fail
        if: ${{ needs.build.result == 'failure' && needs.mutation.result == 'success' }}
        uses: Sniddl/discord-commits@v1.3
        with:
          webhook: "https://discord.com/api/webhooks/958486282735071312/hEz4ZkcN6b6f-uKruZJAS2Y3m8foboLoBxLI5DSVA_ViWiVtZvTpCn6Uo50SwBpl-mIe"
          message: "Successful mutation but build failed"  #: {{ github.event.head_commit.message }}
          #          embed: '{ "title": "{{ commit.title }}", "description": "{{ commit.description }}", "url": "{{ commit.url }}", "author": { "name": "{{ commit.author.name }} ({{ commit.author.username }})", "icon_url": "https://avatars.io/gravatar/{{ commit.author.email }}"} }'
      - name: Discord Commits Message fail
        if: ${{ needs.build.result == 'failure' && needs.mutation.result == 'failure' }}
        uses: Sniddl/discord-commits@v1.3
        with:
          webhook: "https://discord.com/api/webhooks/958486282735071312/hEz4ZkcN6b6f-uKruZJAS2Y3m8foboLoBxLI5DSVA_ViWiVtZvTpCn6Uo50SwBpl-mIe"
          message: "Fail build and mutation"  #: {{ github.event.head_commit.message }}
          #          embed: '{ "title": "{{ commit.title }}", "description": "{{ commit.description }}", "url": "{{ commit.url }}", "author": { "name": "{{ commit.author.name }} ({{ commit.author.username }})", "icon_url": "https://avatars.io/gravatar/{{ commit.author.email }}"} }'

